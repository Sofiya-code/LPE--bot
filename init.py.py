from aiogram import types
from aiogram.dispatcher import FSMContext

from ..keyboards import get_main_keyboard
from ..data.terms import TERMS


async def search_command(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –ø–æ–∏—Å–∫–∞"""
    await callback.message.edit_text(
        "–í–≤–µ–¥–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞:",
        reply_markup=get_back_keyboard()
    )
    await callback.answer()


async def handle_search(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∏—Å–∫–∞ —Ç–µ—Ä–º–∏–Ω–æ–≤"""
    search_term = message.text.lower().strip()
    if not search_term:
        await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å.",
            reply_markup=get_main_keyboard()
        )
        return

    user_data = await state.get_data()
    current_category = user_data.get('current_category')
    matches = []

    if current_category:
        category_terms = TERMS.get(current_category, {})
        for term, details in category_terms.items():
            if search_term in term.lower():
                matches.append(f"–¢–µ—Ä–º–∏–Ω: {term}\n" + "\n".join(f"{k}: {v}" for k, v in details.items()))
    else:
        for category, terms in TERMS.items():
            for term, details in terms.items():
                if search_term in term.lower():
                    matches.append(f"–¢–µ—Ä–º–∏–Ω: {term} (–∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category})\n" + 
                                "\n".join(f"{k}: {v}" for k, v in details.items()))

    if matches:
        await message.answer(
            f"üîç –ù–∞–π–¥–µ–Ω–æ —Ç–µ—Ä–º–∏–Ω–æ–≤: {len(matches)}",
            reply_markup=get_main_keyboard()
        )
        
        for match in matches:
            await message.answer(match)
    else:
        await message.answer(
            "‚ùå –¢–µ—Ä–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å.",
            reply_markup=get_main_keyboard()
        )


def register_search_handlers(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø–æ–∏—Å–∫–∞"""
    dp.register_callback_query_handler(search_command, text="search")
    dp.register_message_handler(handle_search, state="*")